<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	
	<!--扫描spring的注释-->
	<context:component-scan base-package="com.onps"></context:component-scan>
	
    <!--配置数据源-->
	<context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

    <!--创建sqlSessionFactory-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 配置mybatis接口代理开发
		* 接口类名和映射文件必须同名
		*　接口类和映射文件必须在同一个目录　下
		* 映射文件namespace名字必须是接口的全类路径名
		*　接口的方法名必须和映射Statement的iｄ一致
	 -->
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	 	<property name="basePackage" value="com.onps.dao"/>
	 	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	 </bean>

    <!--配置事务-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	
	<!-- 配置通知 -->
	<!--  赵立刚增加了两个  add grant  还有增加了  rollback-for="java.lang.Exception" 用于回滚   -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<tx:attributes>
    <!--以name开头的方法运行的时候都受事务管理限制-->
	<tx:method name="save*" propagation="REQUIRED"/>
	<tx:method name="update*" propagation="REQUIRED" />
	<tx:method name="delete*" propagation="REQUIRED" />
	<tx:method name="insert*" propagation="REQUIRED" />
	<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	<tx:method name="grant*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	<tx:method name="*" propagation="REQUIRED" />
	</tx:attributes>
	
	</tx:advice>
	
	<!-- 配置拦截service -->
	<aop:config>
	<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.onps.service.*.*(..))"/>
	</aop:config>

	<!-- 配置shiro权限管理器 -->
	<bean id="myShiro" class="com.onps.utils.MyShrio"/>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 我们自定义的realm -->
		<property name="realm" ref="myShiro"/>
		<!-- 缓存管理器 -->
		<property name="cacheManager" ref="cacheManager"/>
	</bean>
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 权限管理器 -->
		<property name="securityManager" ref="securityManager"/>
		<!-- 登录地址 当访问需要认证的资源时 如果没有登录（认证） 将自动跳转到此Url -->
		<property name="loginUrl" value="/user/toLogin.do"/>
		<!-- 登录后跳转到业务页面 通常不设置 默认认证成功后跳转回上一个url -->
		<!--<property name="successUrl" value="/home/toHome.do"/>-->
		<!-- 没有权限跳转的页面 -->
		<property name="unauthorizedUrl" value="/error.html"/>
		<!-- 权限配置 shiro 过滤器链 -->
		<property name="filterChainDefinitions">
			<!--常用拦截器-->
			<!--user:如果使用remenberMe的功能可以访问-->
			<!--role:资源必须得到角色权限才能访问-->
			<value>
				<!-- anon无需权限既可访问请求的，此处是登录页面和登录请求 -->
				/user/toLogin.do = anon <!--anon:无需认证（权限）即可以访问-->
				/user/login.do = anon
				/user/js/** = anon
				/user/css/** = anon
				/user/image/** = anon
				<!-- 用户的管理  -->
				<!--  赵立刚测试了  已经注释掉了 -->
				<!--/manage/user/** = anon-->
				<!--/manage/project/** = anon-->
				<!--/manage/permission/** = anon-->
				<!--/manage/role/** = anon-->

				<!--perms:资源必须授予资源权限才能访问-->
				<!--/admin/toAdmin.do=perms[ok]-->
				<!-- 需要管理员角色才能访问此页面 -->
				<!--/user/add=roles[admin]-->
				<!--拦截非静态资源的所有请求-->
				/** = authc<!--authc:必须认证才能访问-->
			</value>
		</property>
	</bean>
</beans>